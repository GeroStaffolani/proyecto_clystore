# Generated by Django 4.2.7 on 2025-09-17 18:46

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Administrador'), ('employee', 'Empleado')], default='employee', max_length=10, verbose_name='Rol')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Teléfono')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('is_active_employee', models.BooleanField(default=True, verbose_name='Empleado activo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nombre')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activa')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
            ],
            options={
                'verbose_name': 'Marca',
                'verbose_name_plural': 'Marcas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre completo')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Teléfono')),
                ('address', models.TextField(blank=True, verbose_name='Dirección')),
                ('dni', models.CharField(blank=True, max_length=20, verbose_name='DNI/Documento')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('imei', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message='El IMEI debe tener exactamente 15 dígitos', regex='^\\d{15}$')], verbose_name='IMEI')),
                ('status', models.CharField(choices=[('available', 'Disponible'), ('reserved', 'Reservado'), ('sold', 'Vendido'), ('in_transit', 'En camino'), ('damaged', 'Dañado')], default='available', max_length=20, verbose_name='Estado')),
                ('condition', models.CharField(choices=[('new', 'Nuevo'), ('used', 'Usado'), ('refurbished', 'Reacondicionado'), ('trade_in', 'Parte de pago')], default='new', max_length=20, verbose_name='Condición')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio')),
                ('storage_capacity', models.CharField(blank=True, max_length=10, verbose_name='Capacidad de almacenamiento')),
                ('color', models.CharField(blank=True, max_length=30, verbose_name='Color')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de ingreso')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última modificación')),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='phones_added', to=settings.AUTH_USER_MODEL, verbose_name='Agregado por')),
            ],
            options={
                'verbose_name': 'Celular',
                'verbose_name_plural': 'Celulares',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sale_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio de venta')),
                ('payment_method', models.CharField(choices=[('cash', 'Efectivo'), ('card', 'Tarjeta'), ('transfer', 'Transferencia'), ('financing', 'Financiación'), ('mixed', 'Mixto')], max_length=20, verbose_name='Forma de pago')),
                ('is_picked_up', models.BooleanField(default=False, verbose_name='Retirado')),
                ('pickup_date', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de retiro')),
                ('has_trade_in', models.BooleanField(default=False, verbose_name='Tiene parte de pago')),
                ('trade_in_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor parte de pago')),
                ('sale_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de venta')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.customer', verbose_name='Cliente')),
                ('phone', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='inventory.phone', verbose_name='Celular')),
                ('sold_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Vendido por')),
                ('trade_in_phone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trade_in_sales', to='inventory.phone', verbose_name='Celular en parte de pago')),
            ],
            options={
                'verbose_name': 'Venta',
                'verbose_name_plural': 'Ventas',
                'ordering': ['-sale_date'],
            },
        ),
        migrations.CreateModel(
            name='PhoneModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre del modelo')),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio base')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.brand', verbose_name='Marca')),
            ],
            options={
                'verbose_name': 'Modelo de celular',
                'verbose_name_plural': 'Modelos de celulares',
                'ordering': ['brand__name', 'name'],
                'unique_together': {('brand', 'name')},
            },
        ),
        migrations.CreateModel(
            name='PhoneComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='Comentario')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha')),
                ('phone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='inventory.phone', verbose_name='Celular')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Comentario',
                'verbose_name_plural': 'Comentarios',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='phone',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.phonemodel', verbose_name='Modelo'),
        ),
    ]
